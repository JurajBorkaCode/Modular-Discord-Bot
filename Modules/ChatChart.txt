#ChatChart Module
import matplotlib.pyplot as plt

@bot.command()
async def chat_chart(ctx, *args):
    scan_limit = 10000
    if args[0] == "help":
        await ctx.send("ChatChart creates a pie chart of the user activity of the channel")
        await ctx.send("To use ChatChart, use: !chat_chart [NUM OF MESSAGES TO SCAN]")
        await ctx.send("Or to scan 10,000 messages, use: !chat_chart")
        return True
    elif args[0] != "":
        try:
            scan_limit = int(args[0])
        except:
            await ctx.send("To use ChatChart, use: !chat_chart [NUM OF MESSAGES TO SCAN]")
    
    messages = []
    channel = ctx.message.channel
    async for message in ctx.channel.history(limit=scan_limit):
        messages.append(message)

    users = {}
    total_messages = 0

    for message in messages:
        user = message.author
        if user.bot:
            continue
        users[user] = users.get(user, 0) + 1
        total_messages += 1

    labels = [str(user) for user in users]
    sizes = [users[user] / total_messages for user in users]

    plt.pie(sizes, labels=labels, autopct='%1.1f%%')
    plt.title('Message Distribution')
    plt.legend(labels, loc='upper right')
    plt.axis('equal')

    # Save the chart to an image file
    chart_file = "chart.png"
    plt.savefig(chart_file)
    plt.close()

    # Send the chart as a message
    chart_image = discord.File(chart_file)
    await channel.send(file=chart_image)